from sklearn import svm,datasets
import matplotlib.pyplot as plt
import numpy as np
from sklearn.metrics import accuracy_score
from sklearn.model_selection import train_test_split

iris = datasets.load_iris()
x = iris.data[:,:2]
y = iris.target

x_train,x_test,y_train,y_test = train_test_split(x,y,random_state=0,test_size=0.3)

clf = svm.SVC(kernel = "linear", C=1)
clf.fit(x_train,y_train)

classifier_predictions = clf.predict(x_test)
print(accuracy_score(y_test,classifier_predictions)*100)

h = 0.02
x_min,x_max = x[:,0].min()-1,x[:,0].max()+1
y_min,y_max = x[:,1].min()-1,x[:,1].max()+1
xx,yy = np.meshgrid(np.arange(x_min,x_max,h),np.arange(y_min,y_max,h))

z = clf.predict(np.c_ [xx.ravel(),yy.ravel()])
z = z.reshape(xx.shape)

plt.contourf(xx,yy,z,cmap = plt.cm.coolwarm,alpha = 0.3)
plt.scatter(x[:,0],x[:,1],c=y,cmap=plt.cm.coolwarm)
plt.xlabel('Sepal Length')
plt.ylabel('Sepal Width')
plt.xlim(xx.min(),xx.max())
plt.ylim(yy.min(),yy.max())
plt.title("Linear")
plt.show()


 python --version
        pip install -U Scikit-learn 
        pip install pandas
        pip install matplotlib
